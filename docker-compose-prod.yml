# OSINT Scraper Platform - Production Docker Compose
# Integrates Go engine, Rust security, Python AI/NLP, and supporting services

version: '3.8'

services:
redis:
image: redis:7-alpine
ports:
- "6379:6379"
volumes:
- redis_data:/data
command: redis-server --appendonly yes
healthcheck:
test: ["CMD", "redis-cli", "ping"]
interval: 30s
timeout: 10s
retries: 3

go-engine:
build:
context: .
dockerfile: services/go-engine/Dockerfile
ports:
- "8080:8080"
environment:
- REDIS_URL=redis://redis:6379
- RUST_SECURITY_URL=http://rust-security:8081
- PYTHON_AI_URL=http://python-ai:8082
- LOG_LEVEL=debug
depends_on:
- redis
- rust-security
volumes:
- ./config:/app/config
healthcheck:
test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
interval: 30s
timeout: 10s
retries: 3

rust-security:
build:
context: .
dockerfile: services/rust-security/Dockerfile
ports:
- "8081:8081"
environment:
- REDIS_URL=redis://redis:6379
- LOG_LEVEL=debug
depends_on:
- redis
volumes:
- ./config:/app/config
healthcheck:
test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
interval: 30s
timeout: 10s
retries: 3

python-ai:
build:
context: .
dockerfile: services/python-ai/Dockerfile
ports:
- "8082:8082"
environment:
- REDIS_URL=redis://redis:6379
- LOG_LEVEL=debug
depends_on:
- redis
volumes:
- ./config:/app/config
- ./models:/app/models
healthcheck:
test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
interval: 30s
timeout: 10s
retries: 3

prometheus:
image: prom/prometheus:latest
ports:
- "9090:9090"
volumes:
- ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
- prometheus_data:/prometheus
command:
- '--config.file=/etc/prometheus/prometheus.yml'
- '--storage.tsdb.path=/prometheus'
- '--web.console.libraries=/etc/prometheus/console_libraries'
- '--web.console.templates=/etc/prometheus/consoles'

grafana:
image: grafana/grafana:latest
ports:
- "3000:3000"
volumes:
- grafana_data:/var/lib/grafana
- ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
- ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
environment:
- GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
redis_data:
prometheus_data:
grafana_data:

networks:
  osint_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
